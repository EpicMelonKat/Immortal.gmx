<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_woodensword</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mwep=10
selectedweapon = 1
attackable=true
weapon_type = "melee"
cursprite = sprite_index
melee_fov = 50
attack_duration = 6
attacking = false
math_set_epsilon(0.000001)
valpos = ds_list_find_index(global.weapon_list,sprite_index)
weapon_type = ds_list_find_value(global.weapon_list,valpos+1)
element = ds_list_find_value(global.weapon_list,valpos+2)
dist_damage = ds_list_find_value(global.weapon_list,valpos+3)
dist_elemental = ds_list_find_value(global.weapon_list,valpos+4)
attack_duration = ds_list_find_value(global.weapon_list,valpos+5)
ability_cooldown = ds_list_find_value(global.weapon_list,valpos+6)
melee_fov = ds_list_find_value(global.weapon_list,valpos+7)
//show_message(string(weapon_type))
//show_message(string(element))
//show_message(string(dist_damage))
//show_message(string(dist_elemental))
//show_message(string(attack_duration))
//show_message(string(ability_cooldown))
//show_message(string(melee_fov))

if place_meeting(x,y,obj_player) {
    holder = obj_player
    
    x = holder.x
    y = holder.y
    damage = round(dist_damage*distance_to_point(room_width/2,room_height/2))+1
    eldamage = round(dist_elemental*distance_to_point(room_width/2,room_height/2))+1
}


show_message(string(damage))
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>attackable = true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_angle = curdir
direction = image_angle
attacking = false
alarm[1] = attack_duration*room_speed
ds_list_destroy(hit_list)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_weaponmovement()
scr_attack()
scr_dealdamage()
scr_weaponchanger()//testing

if attacking = true {
    image_angle+=4
    direction = image_angle
}
//image_angle = point_direction(x,y,mouse_x,mouse_y)-90
//direction = image_angle

if cursprite != sprite_index {
valpos = ds_list_find_index(global.weapon_list,sprite_index)
weapon_type = ds_list_find_value(global.weapon_list,valpos+1)
element = ds_list_find_value(global.weapon_list,valpos+2)
dist_damage = ds_list_find_value(global.weapon_list,valpos+3)
dist_elemental = ds_list_find_value(global.weapon_list,valpos+4)
attack_duration = ds_list_find_value(global.weapon_list,valpos+5)
ability_cooldown = ds_list_find_value(global.weapon_list,valpos+6)
melee_fov = ds_list_find_value(global.weapon_list,valpos+7)

x = holder.x
y = holder.y
damage = round(dist_damage*distance_to_point(room_width/2,room_height/2))+1
eldamage = round(dist_elemental*distance_to_point(room_width/2,room_height/2))+1

}

cursprite = sprite_index
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
